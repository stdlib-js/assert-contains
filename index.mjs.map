{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert-is-collection';\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport indexOfSameValue from '@stdlib/array-base-index-of-same-value';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Tests if an array-like value contains a search value.\n*\n* @param {(Collection|string)} value - input value\n* @param {*} searchValue - search value\n* @param {integer} [position=0] - position at which to start searching for `searchValue`\n* @throws {TypeError} first argument must be array-like\n* @throws {Error} must provide a search value\n* @throws {TypeError} second argument must be a string when the first argument is a string\n* @throws {TypeError} third argument must be an integer\n* @returns {boolean} boolean indicating whether one value contains another\n*\n* @example\n* var bool = contains( 'last man standing', 'stand' );\n* // returns true\n*\n* @example\n* var bool = contains( [ 1, 2, 3, 4 ], 2 );\n* // returns true\n*\n* @example\n* var bool = contains( 'presidential election', 'president' );\n* // returns true\n*\n* @example\n* var bool = contains( [ NaN, 2, 3, 4 ], NaN );\n* // returns true\n*\n* @example\n* var bool = contains( 'javaScript', 'js' );\n* // returns false\n*\n* @example\n* var bool = contains( [ 1, 2, 3, {} ], {} );\n* // returns false\n*\n* @example\n* var bool = contains( 'Hidden Treasures', '' );\n* // returns true\n*/\nfunction contains( value, searchValue, position ) {\n\tvar isStr;\n\tvar pos;\n\n\tisStr = isString( value );\n\tif ( !isCollection( value ) && !isStr ) {\n\t\tthrow new TypeError( format( '02b38', value ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tthrow new Error( format('02b0A') );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( position ) ) {\n\t\t\tthrow new TypeError( format( '02b2z', position ) );\n\t\t}\n\t\tpos = position;\n\t\tif ( pos < 0 ) {\n\t\t\tpos = 0;\n\t\t}\n\t} else {\n\t\tpos = 0;\n\t}\n\tif ( isStr ) {\n\t\tif ( !isString( searchValue ) ) {\n\t\t\tthrow new TypeError( format( '02b39', searchValue ) );\n\t\t}\n\t\treturn value.indexOf( searchValue, pos ) !== -1;\n\t}\n\treturn indexOfSameValue( value, searchValue, pos ) !== -1;\n}\n\n\n// EXPORTS //\n\nexport default contains;\n"],"names":["contains","value","searchValue","position","isStr","pos","isString","isCollection","TypeError","format","arguments","length","Error","isInteger","indexOf","indexOfSameValue"],"mappings":";;ufAuEA,SAASA,EAAUC,EAAOC,EAAaC,GACtC,IAAIC,EACAC,EAGJ,GADAD,EAAQE,EAAUL,IACZM,EAAcN,KAAYG,EAC/B,MAAM,IAAII,UAAWC,EAAQ,QAASR,IAEvC,GAAKS,UAAUC,OAAS,EACvB,MAAM,IAAIC,MAAOH,EAAO,UAEzB,GAAKC,UAAUC,OAAS,EAAI,CAC3B,IAAME,EAAWV,GAChB,MAAM,IAAIK,UAAWC,EAAQ,QAASN,KAEvCE,EAAMF,GACK,IACVE,EAAM,EAET,MACEA,EAAM,EAEP,GAAKD,EAAQ,CACZ,IAAME,EAAUJ,GACf,MAAM,IAAIM,UAAWC,EAAQ,QAASP,IAEvC,OAA8C,IAAvCD,EAAMa,QAASZ,EAAaG,EACnC,CACD,OAAwD,IAAjDU,EAAkBd,EAAOC,EAAaG,EAC9C"}